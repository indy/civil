DROP TABLE IF EXISTS notes_decks;
DROP TABLE IF EXISTS notes;
DROP TABLE IF EXISTS points;
DROP TABLE IF EXISTS decks;
DROP TABLE IF EXISTS users;
DROP TYPE IF EXISTS deck_kind;

CREATE TYPE deck_kind AS ENUM ('publication', 'person', 'event', 'idea');
-- these were enums but have now been renamed to show that they're obsolete:
-- OBSOLETE__tag, OBSOLETE__book

CREATE TYPE idea_kind AS ENUM ('idea_na', 'idea_verbatim', 'idea_insight');
-- idea_na == idea not applicable, use this for publications, people and events

CREATE TYPE ref_kind AS ENUM ('ref', 'ref_to_parent', 'ref_to_child', 'ref_in_contrast');


CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    email TEXT UNIQUE NOT NULL,
    username TEXT NOT NULL,

    password TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS decks (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    user_id BIGINT NOT NULL REFERENCES users,

    kind deck_kind NOT NULL,

    -- specific to kind == 'idea'
    --
    idea_category idea_kind NOT NULL DEFAULT 'idea_na'::idea_kind;

    -- shared amongst the different deck kinds
    --
    name TEXT NOT NULL,
    source TEXT,
    author TEXT
);

CREATE TABLE IF NOT EXISTS points (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    deck_id BIGINT NOT NULL REFERENCES decks,

    title TEXT,

    location_textual TEXT,
    longitude REAL,
    latitude REAL,
    location_fuzz REAL NOT NULL DEFAULT 0.0,

    date_textual TEXT,
    exact_date DATE,
    lower_date DATE,
    upper_date DATE,
    date_fuzz REAL NOT NULL DEFAULT 1.0
);

CREATE TABLE IF NOT EXISTS notes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    -- required when performing text searches
    --
    user_id BIGINT NOT NULL REFERENCES users,
    deck_id BIGINT NOT NULL REFERENCES decks,

    separator BOOL NOT NULL DEFAULT false,
    title TEXT,
    content TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS notes_decks (
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    kind ref_kind NOT NULL DEFAULT 'ref'::ref_kind;

    note_id BIGINT NOT NULL REFERENCES notes,
    deck_id BIGINT NOT NULL REFERENCES decks,

    PRIMARY KEY(note_id, deck_id)
);
