-- DROP TABLE IF EXISTS stats;
-- DROP TABLE IF EXISTS card_evaluations;
-- DROP TABLE IF EXISTS cards;
-- DROP TABLE IF EXISTS card_decks;
-- DROP TABLE IF EXISTS images;
-- DROP TABLE IF EXISTS publication_extras;
-- DROP TABLE IF EXISTS notes_decks;
-- DROP TABLE IF EXISTS notes;
-- DROP TABLE IF EXISTS points;
-- DROP TABLE IF EXISTS decks;
-- DROP TABLE IF EXISTS users;
-- DROP TYPE IF EXISTS deck_kind;
-- DROP TYPE IF EXISTS ref_kind;
-- DROP TYPE IF EXISTS point_kind;

CREATE TYPE deck_kind AS ENUM ('publication', 'person', 'idea', 'timeline');

CREATE TYPE ref_kind AS ENUM ('ref', 'ref_to_parent', 'ref_to_child', 'ref_in_contrast', 'ref_critical');

CREATE TYPE point_kind AS ENUM ('point', 'point_begin', 'point_end');

-- determine which 'section' of a deck a note belongs to
CREATE TYPE note_kind AS ENUM ('note', 'note_review', 'note_summary');

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    email TEXT UNIQUE NOT NULL,
    username TEXT NOT NULL,

    image_count INT NOT NULL DEFAULT 0,

    password TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS decks (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    user_id BIGINT NOT NULL REFERENCES users,
    kind deck_kind NOT NULL,

    -- for 'collection' ideas like 'book' whose children shouldn't be rendered in the graph
    graph_terminator BOOLEAN NOT NULL DEFAULT false,

    name TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS points (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    deck_id BIGINT NOT NULL REFERENCES decks,
    title TEXT,
    kind point_kind NOT NULL DEFAULT 'point'::point_kind,

    location_textual TEXT,
    longitude REAL,
    latitude REAL,
    location_fuzz REAL NOT NULL DEFAULT 0.0,

    date_textual TEXT,
    exact_date DATE,
    lower_date DATE,
    upper_date DATE,
    date_fuzz REAL NOT NULL DEFAULT 1.0,

    --  ts == text search
    ts tsvector GENERATED ALWAYS AS
        (setweight(to_tsvector('english', coalesce(title, '')), 'A') ||
         setweight(to_tsvector('english', coalesce(location_textual, '')), 'B') ||
         setweight(to_tsvector('english', coalesce(date_textual, '')), 'B')) STORED
);
CREATE INDEX points_ts_idx ON points USING GIN (ts);

CREATE TABLE IF NOT EXISTS notes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    -- required when performing text searches
    --
    user_id BIGINT NOT NULL REFERENCES users,
    deck_id BIGINT NOT NULL REFERENCES decks,

    -- for notes that are specific to a point
    -- will be NULL for most notes
    point_id BIGINT REFERENCES points,

    kind note_kind NOT NULL DEFAULT 'note'::note_kind,

    content TEXT NOT NULL,
    -- ts == text search for content
    ts tsvector GENERATED ALWAYS AS (to_tsvector('english', content)) STORED
);
CREATE INDEX notes_ts_idx ON notes USING GIN (ts);

CREATE TABLE IF NOT EXISTS notes_decks (
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    kind ref_kind NOT NULL DEFAULT 'ref'::ref_kind,
    note_id BIGINT NOT NULL REFERENCES notes,
    deck_id BIGINT NOT NULL REFERENCES decks,

    annotation TEXT,

    PRIMARY KEY(note_id, deck_id)
);

CREATE TABLE IF NOT EXISTS publication_extras (
    deck_id BIGINT NOT NULL REFERENCES decks,

    source TEXT,
    author TEXT,
    short_description TEXT,

    rating INTEGER NOT NULL DEFAULT 0,

    published_date DATE NOT NULL DEFAULT CURRENT_DATE,

    ts tsvector GENERATED ALWAYS AS
        (setweight(to_tsvector('english', coalesce(source, '')), 'A') ||
         setweight(to_tsvector('english', coalesce(author, '')), 'B') ||
         setweight(to_tsvector('english', coalesce(short_description, '')), 'A')) STORED,

    PRIMARY KEY(deck_id)
);
CREATE INDEX publication_extras_ts_idx ON publication_extras USING GIN (ts);

CREATE TABLE IF NOT EXISTS images (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    user_id BIGINT NOT NULL REFERENCES users,
    filename TEXT NOT NULL
);

-- spaced repetition

-- CREATE TABLE IF NOT EXISTS card_groupings (
--     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--     created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

--     user_id BIGINT NOT NULL REFERENCES users,
--     title TEXT NOT NULL
-- );

CREATE TABLE IF NOT EXISTS cards (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    user_id BIGINT NOT NULL REFERENCES users,
    note_id BIGINT NOT NULL REFERENCES notes,

    -- card_grouping_id BIGINT REFERENCES card_groupings,

    prompt TEXT NOT NULL,
    next_test_date TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    easiness_factor REAL NOT NULL,
    inter_repetition_interval INTEGER NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS card_ratings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    card_id BIGINT NOT NULL REFERENCES cards,

    rating SMALLINT NOT NULL
);

-- stats to give a rough idea of growth
CREATE TABLE IF NOT EXISTS stats (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    user_id BIGINT NOT NULL REFERENCES users,

    num_ideas INTEGER NOT NULL DEFAULT 0,
    num_publications INTEGER NOT NULL DEFAULT 0,
    num_people INTEGER NOT NULL DEFAULT 0,
    num_timelines INTEGER NOT NULL DEFAULT 0,

    num_refs INTEGER NOT NULL DEFAULT 0,
    num_cards INTEGER NOT NULL DEFAULT 0,
    num_card_ratings INTEGER NOT NULL DEFAULT 0,
    num_images INTEGER NOT NULL DEFAULT 0,

    num_notes_in_ideas INTEGER NOT NULL DEFAULT 0,
    num_notes_in_publications INTEGER NOT NULL DEFAULT 0,
    num_notes_in_people INTEGER NOT NULL DEFAULT 0,
    num_notes_in_timelines INTEGER NOT NULL DEFAULT 0,

    num_points_in_people INTEGER NOT NULL DEFAULT 0,
    num_points_in_timelines INTEGER NOT NULL DEFAULT 0,

    num_refs_ideas_to_ideas INTEGER NOT NULL DEFAULT 0,
    num_refs_ideas_to_publications INTEGER NOT NULL DEFAULT 0,
    num_refs_ideas_to_people INTEGER NOT NULL DEFAULT 0,
    num_refs_ideas_to_timelines INTEGER NOT NULL DEFAULT 0,

    num_refs_publications_to_ideas INTEGER NOT NULL DEFAULT 0,
    num_refs_publications_to_publications INTEGER NOT NULL DEFAULT 0,
    num_refs_publications_to_people INTEGER NOT NULL DEFAULT 0,
    num_refs_publications_to_timelines INTEGER NOT NULL DEFAULT 0,

    num_refs_people_to_ideas INTEGER NOT NULL DEFAULT 0,
    num_refs_people_to_publications INTEGER NOT NULL DEFAULT 0,
    num_refs_people_to_people INTEGER NOT NULL DEFAULT 0,
    num_refs_people_to_timelines INTEGER NOT NULL DEFAULT 0,

    num_refs_timelines_to_ideas INTEGER NOT NULL DEFAULT 0,
    num_refs_timelines_to_publications INTEGER NOT NULL DEFAULT 0,
    num_refs_timelines_to_people INTEGER NOT NULL DEFAULT 0,
    num_refs_timelines_to_timelines INTEGER NOT NULL DEFAULT 0
);
