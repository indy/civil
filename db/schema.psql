DROP TABLE IF EXISTS notes_decks;
DROP TABLE IF EXISTS notes;
DROP TABLE IF EXISTS points;
DROP TABLE IF EXISTS decks;
DROP TABLE IF EXISTS users;
DROP TYPE IF EXISTS deck_kind;

-- temp note: correct for civil_ns
CREATE TYPE deck_kind AS ENUM ('article', 'book', 'person', 'event', 'idea', 'tag');
-- ALTER TYPE deck_kind ADD VALUE 'something'; -- appends value to enum

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    email TEXT UNIQUE NOT NULL,
    username TEXT NOT NULL,

    password TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS decks (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    user_id BIGINT NOT NULL REFERENCES users,

    kind deck_kind NOT NULL,

    name TEXT NOT NULL,         -- was title in articles and points
    source TEXT,                -- for articles
    author TEXT                 -- for articles and books
);

CREATE TABLE IF NOT EXISTS points (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    deck_id BIGINT NOT NULL REFERENCES decks,

    title TEXT,

    location_textual TEXT,
    longitude REAL,
    latitude REAL,
    location_fuzz REAL NOT NULL DEFAULT 0.0,

    date_textual TEXT,
    exact_date DATE,
    lower_date DATE,
    upper_date DATE,
    date_fuzz REAL NOT NULL DEFAULT 1.0
);

CREATE TABLE IF NOT EXISTS notes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    -- required when performing text searches
    --
    user_id BIGINT NOT NULL REFERENCES users,
    deck_id BIGINT NOT NULL REFERENCES decks,

    note_type INT NOT NULL,
    source TEXT,
    content TEXT NOT NULL,
    title TEXT,
    separator BOOL NOT NULL DEFAULT false
);

CREATE TABLE IF NOT EXISTS notes_decks (
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    note_id BIGINT NOT NULL REFERENCES notes,
    deck_id BIGINT NOT NULL REFERENCES decks,

    PRIMARY KEY(note_id, deck_id)
);
