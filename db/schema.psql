DROP TABLE IF EXISTS logs;
DROP TABLE IF EXISTS ideas_ideas;
DROP TABLE IF EXISTS tags_notes;
DROP TABLE IF EXISTS decks_notes;
DROP TABLE IF EXISTS notes_decks;
DROP TABLE IF EXISTS ideas_notes;
DROP TABLE IF EXISTS notes_tags;
DROP TABLE IF EXISTS ideas_tags;
DROP TABLE IF EXISTS tags;
DROP TABLE IF EXISTS notes;
DROP TABLE IF EXISTS decks;
DROP TABLE IF EXISTS ideas;
DROP TABLE IF EXISTS timespans;
DROP TABLE IF EXISTS dates;
DROP TABLE IF EXISTS locations;
DROP TABLE IF EXISTS users;
DROP TYPE IF EXISTS deck_kind;

CREATE TYPE deck_kind AS ENUM ('historic_person', 'historic_point', 'subject', 'article', 'book');
-- ALTER TYPE deck_kind ADD VALUE 'something'; -- appends value to enum

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    email TEXT UNIQUE NOT NULL,
    username TEXT NOT NULL,

    password TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS dates (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    textual TEXT,
    exact_date DATE,
    lower_date DATE,
    upper_date DATE,
    fuzz REAL NOT NULL DEFAULT 1.0
);

CREATE TABLE IF NOT EXISTS timespans (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    textual TEXT, -- textual description of the timespan e.g. "around 50 years old"
    date_start_id BIGINT REFERENCES dates,
    date_end_id BIGINT REFERENCES dates
);

CREATE TABLE IF NOT EXISTS locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    textual TEXT,
    longitude REAL,
    latitude REAL,
    fuzz REAL NOT NULL DEFAULT 0.0
);

CREATE TABLE IF NOT EXISTS notes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    -- not _really_ required but could be used to check
    -- that the user is authorized to view this note
    --
    -- this will become really important once tags are
    -- in and we can have orphan notes
    --
    user_id BIGINT NOT NULL REFERENCES users,

    note_type INT NOT NULL,
    source TEXT,
    content TEXT NOT NULL,
    title TEXT,
    separator BOOL NOT NULL DEFAULT false
);

CREATE TABLE IF NOT EXISTS decks (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    user_id BIGINT NOT NULL REFERENCES users,

    kind deck_kind NOT NULL,

    name TEXT NOT NULL,         -- was title in articles and historic_points
    source TEXT,                -- for articles

    date_id BIGINT REFERENCES dates, -- historic_points
    location_id BIGINT REFERENCES locations, --historic_points

    timespan_id BIGINT REFERENCES timespans, -- historic_people
    location2_id BIGINT REFERENCES locations -- historic_people (death_location)
);

CREATE TABLE IF NOT EXISTS ideas (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    user_id BIGINT NOT NULL REFERENCES users,

    address TEXT NOT NULL,      -- unique address created from date + daily iteration
    title TEXT NOT NULL
);

-- a log of all the changes made to ideas
-- (only applies to ideas, not decks)
-- (creates, edits, deletions, tags added, tags removed)
-- lots of creates in the beginning, but after a few years this could be interesting
--
CREATE TABLE IF NOT EXISTS logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    user_id BIGINT NOT NULL REFERENCES users,

    description TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS tags (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    user_id BIGINT NOT NULL REFERENCES users,

    name TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS notes_tags (
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    note_id BIGINT NOT NULL REFERENCES notes,
    tag_id BIGINT NOT NULL REFERENCES tags,

    PRIMARY KEY(note_id, tag_id)
);

CREATE TABLE IF NOT EXISTS ideas_tags (
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    idea_id BIGINT NOT NULL REFERENCES ideas,
    tag_id BIGINT NOT NULL REFERENCES tags,

    PRIMARY KEY(idea_id, tag_id)
);

CREATE TABLE IF NOT EXISTS decks_notes (
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    deck_id BIGINT NOT NULL REFERENCES decks,
    note_id BIGINT NOT NULL REFERENCES notes,

    PRIMARY KEY(deck_id, note_id)
);

CREATE TABLE IF NOT EXISTS tags_notes (
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    tag_id BIGINT NOT NULL REFERENCES tags,
    note_id BIGINT NOT NULL REFERENCES notes,

    PRIMARY KEY(tag_id, note_id)
);

CREATE TABLE IF NOT EXISTS notes_decks (
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    note_id BIGINT NOT NULL REFERENCES notes,
    deck_id BIGINT NOT NULL REFERENCES decks,

    PRIMARY KEY(note_id, deck_id)
);

CREATE TABLE IF NOT EXISTS ideas_notes (
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    idea_id BIGINT NOT NULL REFERENCES ideas,
    note_id BIGINT NOT NULL REFERENCES notes,

    PRIMARY KEY(idea_id, note_id)
);

CREATE TABLE IF NOT EXISTS ideas_ideas (
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    reason TEXT NOT NULL,

    idea_id BIGINT NOT NULL REFERENCES ideas,
    idea2_id BIGINT NOT NULL REFERENCES ideas,

    PRIMARY KEY(idea_id, idea2_id)
);
